---
- name: Hardening de servidores Ubuntu
  hosts: ubuntu
  become: true
  tasks:

    # 1. Asegurarse de que UFW está instalado
    - name: Asegurarse de que UFW está instalado
      ansible.builtin.apt:
        name: ufw
        state: present

    # 2. Permitir el tráfico entrante de SSH antes de bloquear el resto
    - name: Habilitar y configurar ufw para permitir solo SSH
      ansible.builtin.ufw:
        rule: allow
        name: OpenSSH
        direction: in # Habilito que únicamente el tráfico entrante por parte de SSH sea permitido

    # 3. Bloquear todo el tráfico entrante por defecto
    - name: Bloquear todo el tráfico entrante por defecto
      ansible.builtin.ufw:
        rule: deny
        direction: in # Niego todo tipo de tráfico entrante

    # 4. Habilitar UFW. Esto aplica las reglas anteriores.
    - name: Habilitar UFW
      ansible.builtin.ufw:
        state: enabled

    # 5. Actualizar todos los paquetes
    - name: Sistema actualizado
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: true
      notify: Reiniciar sistema
    
    # 6. Deshabilitar el login como root
    - name: No permitir login como root
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        insertafter: '^#PermitRootLogin'
        line: PermitRootLogin no # Bloqueo que el root pueda entrar por ssh
      notify: Reiniciar daemon ssh

    # 7. Deshabilitar autenticación por contraseña y permitir solo clave pública
    - name: Inicio de sesion unicamente con llave publica 
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        insertafter: '^#PasswordAuthentication'
        line: PasswordAuthentication no # Deshabilito el login con contraseña
      notify: Reiniciar daemon ssh

    # 8. Instalar fail2ban
    - name: Instalar fail2ban
      ansible.builtin.apt:
        name: fail2ban 
        state: present # Compruebo que fail2ban este presente en el sistema, sino, lo instalo.
      notify: Reiniciar fail2ban

    # 9. Configurar fail2ban para proteger SSH
    - name: Configurar fail2ban para bloquear intentos SSH
      ansible.builtin.copy:
        dest: /etc/fail2ban/jail.d/defaults-debian.conf
        content: |
          [sshd]
          enabled  = true
          port     = ssh
          logpath  = /var/log/auth.log
          maxretry = 3 # Cantidad de Intentos 
          bantime  = 600 # Tiempo de baneo
          findtime = 600 # Periodo de tiempo por el cual cuenta los intentos fallidos
      notify: Reiniciar fail2ban

  handlers:
    # Handler para reiniciar el sistema si se actualizan los paquetes
    - name: Reiniciar sistema
      ansible.builtin.reboot:
        msg: "El sistema se reinicia debido a actualizaciones de paquetes."
        pre_reboot_delay: 10 # Espera 10 segundos antes del reinicio
        post_reboot_delay: 30 # Espera 30 segundos después del reinicio para continuar el playbook

    # Handler para reiniciar el servicio SSH si se cambia la configuración
    - name: Reiniciar daemon ssh
      ansible.builtin.systemd:
        name: ssh
        state: restarted

    # Handler para reiniciar fail2ban si se cambia su configuración
    - name: Reiniciar fail2ban
      ansible.builtin.systemd:
        name: fail2ban
        state: restarted
